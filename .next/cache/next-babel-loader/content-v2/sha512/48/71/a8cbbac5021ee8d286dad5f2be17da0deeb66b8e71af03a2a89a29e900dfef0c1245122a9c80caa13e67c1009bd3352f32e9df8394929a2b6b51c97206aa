{"ast":null,"code":"var BMRInterface = require('./abi/BMRInterface.json');\n\nvar ethers = require('ethers');\n\nvar BMRInstance = function BMRInstance(address, signer) {\n  return new ethers.Contract(address, BMRInterface.abi, web3);\n};\n\n_c = BMRInstance;\nexport default BMRInstance;\n\nvar _c;\n\n$RefreshReg$(_c, \"BMRInstance\");","map":{"version":3,"sources":["/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/ethereum/bmr.js"],"names":["BMRInterface","require","ethers","BMRInstance","address","signer","Contract","abi","web3"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,yBAAD,CAA5B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,SAAO,IAAIH,MAAM,CAACI,QAAX,CAAoBF,OAApB,EAA6BJ,YAAY,CAACO,GAA1C,EAA+CC,IAA/C,CAAP;AACF,CAFD;;KAAML,W;AAIN,eAAeA,WAAf","sourcesContent":["const BMRInterface = require('./abi/BMRInterface.json');\nconst ethers = require('ethers');\n\nconst BMRInstance = (address, signer) => {\n   return new ethers.Contract(address, BMRInterface.abi, web3);\n};\n\nexport default BMRInstance;\n"]},"metadata":{},"sourceType":"module"}