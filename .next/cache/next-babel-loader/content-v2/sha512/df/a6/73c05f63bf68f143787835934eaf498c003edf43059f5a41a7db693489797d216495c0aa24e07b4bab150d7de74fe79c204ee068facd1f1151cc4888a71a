{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\n\nconst addresses = require('../ethereum/addresses');\n\nclass Table extends Component {\n  // Nextjs uses this function to render this first server-side\n  static async getInitialProps() {\n    return {};\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      btcusd: 'N/A',\n      updated: 'N/A'\n    };\n    this.onUpdate = this.onUpdate.bind(this);\n  }\n\n  async componentDidMount() {\n    const btcInst = ConsumerInstance(addresses.btcusd);\n    const decimals = await btcInst.decimals();\n    const price = await btcInst.getLatestPrice();\n    this.state = {\n      btcusd: price / Math.pow(10, decimals),\n      updated: 'N/A'\n    };\n  }\n\n  async onUpdate() {\n    console.log('UPDATE');\n    const btcInst = ConsumerInstance(addresses.btcusd);\n    const decimals = await btcInst.decimals();\n    const price = await btcInst.getLatestPrice();\n    this.state = {\n      btcusd: price / Math.pow(10, decimals),\n      updated: 'N/A'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Price Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ui celled table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Pair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  content: \"Updated Data\",\n                  icon: \"plus square\",\n                  primary: true,\n                  onClick: this.onUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Token Pair\",\n              children: \"BTC/USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Price\",\n              children: this.state.btcusd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Last Updated\",\n              children: this.state.updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js"],"names":["React","Component","Button","ConsumerInstance","addresses","require","Table","getInitialProps","constructor","props","state","btcusd","updated","onUpdate","bind","componentDidMount","btcInst","decimals","price","getLatestPrice","Math","pow","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC3B;AACA,eAAaM,eAAb,GAA+B;AAC5B,WAAO,EAAP;AACF;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACF;;AAED,QAAMC,iBAAN,GAA0B;AACvB,UAAMC,OAAO,GAAGb,gBAAgB,CAACC,SAAS,CAACO,MAAX,CAAhC;AACA,UAAMM,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAR,EAAvB;AACA,UAAMC,KAAK,GAAG,MAAMF,OAAO,CAACG,cAAR,EAApB;AAEA,SAAKT,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAEO,KAAK,GAAGE,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaJ,QAAb,CAAlB;AAA0CL,MAAAA,OAAO,EAAE;AAAnD,KAAb;AACF;;AACD,QAAMC,QAAN,GAAiB;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMP,OAAO,GAAGb,gBAAgB,CAACC,SAAS,CAACO,MAAX,CAAhC;AACA,UAAMM,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAR,EAAvB;AACA,UAAMC,KAAK,GAAG,MAAMF,OAAO,CAACG,cAAR,EAApB;AAEA,SAAKT,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAEO,KAAK,GAAGE,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaJ,QAAb,CAAlB;AAA0CL,MAAAA,OAAO,EAAE;AAAnD,KAAb;AACF;;AAEDY,EAAAA,MAAM,GAAG;AACN,wBACG;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA,gCACG;AAAA,iCACG;AAAA,oCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFH,eAGG;AAAA,qCACG;AAAA,uCACG,QAAC,MAAD;AACG,kBAAA,OAAO,EAAC,cADX;AAEG,kBAAA,IAAI,EAAC,aAFR;AAGG,kBAAA,OAAO,MAHV;AAIG,kBAAA,OAAO,EAAE,KAAKX;AAJjB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,oBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBADH,eAiBG;AAAA,iCACG;AAAA,oCACG;AAAI,4BAAW,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG;AAAI,4BAAW,OAAf;AAAA,wBAAwB,KAAKH,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAFH,eAGG;AAAI,4BAAW,cAAf;AAAA,wBAA+B,KAAKD,KAAL,CAAWE;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAjBH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AA8BF;;AA5D0B;;AA+D9B,eAAeN,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\nconst addresses = require('../ethereum/addresses');\n\nclass Table extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      return {};\n   }\n\n   constructor(props) {\n      super(props);\n\n      this.state = { btcusd: 'N/A', updated: 'N/A' };\n      this.onUpdate = this.onUpdate.bind(this);\n   }\n\n   async componentDidMount() {\n      const btcInst = ConsumerInstance(addresses.btcusd);\n      const decimals = await btcInst.decimals();\n      const price = await btcInst.getLatestPrice();\n\n      this.state = { btcusd: price / Math.pow(10, decimals), updated: 'N/A' };\n   }\n   async onUpdate() {\n      console.log('UPDATE');\n      const btcInst = ConsumerInstance(addresses.btcusd);\n      const decimals = await btcInst.decimals();\n      const price = await btcInst.getLatestPrice();\n\n      this.state = { btcusd: price / Math.pow(10, decimals), updated: 'N/A' };\n   }\n\n   render() {\n      return (\n         <div>\n            <h3>Data Price Feed</h3>\n            <table className='ui celled table'>\n               <thead>\n                  <tr>\n                     <th>Token Pair</th>\n                     <th>Price</th>\n                     <th>\n                        <a>\n                           <Button\n                              content='Updated Data'\n                              icon='plus square'\n                              primary\n                              onClick={this.onUpdate}\n                           />\n                        </a>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  <tr>\n                     <td data-label='Token Pair'>BTC/USD</td>\n                     <td data-label='Price'>{this.state.btcusd}</td>\n                     <td data-label='Last Updated'>{this.state.updated}</td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}