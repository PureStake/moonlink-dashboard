{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\n\nvar addresses = require('../ethereum/addresses');\n\nvar Table = /*#__PURE__*/function (_Component) {\n  _inherits(Table, _Component);\n\n  var _super = _createSuper(Table);\n\n  function Table() {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      btcusd: 'N/A',\n      updated: 'N/A'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUpdate\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentdate, btcInst, btcDec, btcPrice, ethInst, ethDec, ethPrice;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Date\n              currentdate = new Date(); // BTC\n\n              btcInst = ConsumerInstance(addresses.btcusd);\n              _context.next = 4;\n              return btcInst.decimals();\n\n            case 4:\n              btcDec = _context.sent;\n              _context.next = 7;\n              return btcInst.getLatestPrice();\n\n            case 7:\n              _context.t0 = _context.sent;\n              _context.t1 = Math.pow(10, btcDec);\n              btcPrice = _context.t0 / _context.t1;\n              // BTC\n              ethInst = ConsumerInstance(addresses.ethusd);\n              _context.next = 13;\n              return ethInst.decimals();\n\n            case 13:\n              ethDec = _context.sent;\n              _context.next = 16;\n              return ethInst.getLatestPrice();\n\n            case 16:\n              _context.t2 = _context.sent;\n              _context.t3 = Math.pow(10, ethDec);\n              ethPrice = _context.t2 / _context.t3;\n\n              _this.setState(function () {\n                return {\n                  btcusd: btcPrice.toFixed(2),\n                  ethusd: ethPrice.toFixed(2),\n                  updated: \"\".concat(currentdate.getFullYear(), \"/\").concat(currentdate.getMonth(), \"/\").concat(currentdate.getDate(), \" \").concat(currentdate.getHours(), \":\").concat(currentdate.getMinutes(), \":\").concat(currentdate.getSeconds())\n                };\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var currentdate, btcInst, decimals, price;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                currentdate = new Date();\n                btcInst = ConsumerInstance(addresses.btcusd);\n                _context2.next = 4;\n                return btcInst.decimals();\n\n              case 4:\n                decimals = _context2.sent;\n                _context2.next = 7;\n                return btcInst.getLatestPrice();\n\n              case 7:\n                _context2.t0 = _context2.sent;\n                _context2.t1 = Math.pow(10, decimals);\n                price = _context2.t0 / _context2.t1;\n                this.setState(function () {\n                  return {\n                    btcusd: price.toFixed(2),\n                    updated: \"\".concat(currentdate.getFullYear(), \"/\").concat(currentdate.getMonth(), \"/\").concat(currentdate.getDate(), \" \").concat(currentdate.getHours(), \":\").concat(currentdate.getMinutes(), \":\").concat(currentdate.getSeconds())\n                  };\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Data Price Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"ui celled table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Token Pair\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    content: \"Updated Data\",\n                    icon: \"plus square\",\n                    primary: true,\n                    onClick: this.onUpdate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 28\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Token Pair\",\n                children: \"BTC/USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Price\",\n                children: this.state.btcusd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": \"Last Updated\",\n                children: this.state.updated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // Nextjs uses this function to render this first server-side\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", {});\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Table;\n}(Component);\n\nexport default Table;","map":{"version":3,"sources":["/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js"],"names":["React","Component","Button","ConsumerInstance","addresses","require","Table","btcusd","updated","currentdate","Date","btcInst","decimals","btcDec","getLatestPrice","Math","pow","btcPrice","ethInst","ethusd","ethDec","ethPrice","setState","toFixed","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","price","onUpdate","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\nconst addresses = require('../ethereum/addresses');\n\nclass Table extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      return {};\n   }\n\n   state = {\n      btcusd: 'N/A',\n      updated: 'N/A',\n   };\n\n   async componentDidMount() {\n      const currentdate = new Date();\n\n      const btcInst = ConsumerInstance(addresses.btcusd);\n      const decimals = await btcInst.decimals();\n      const price = (await btcInst.getLatestPrice()) / Math.pow(10, decimals);\n\n      this.setState(() => {\n         return {\n            btcusd: price.toFixed(2),\n            updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`,\n         };\n      });\n   }\n\n   onUpdate = async () => {\n      // Date\n      const currentdate = new Date();\n      // BTC\n      const btcInst = ConsumerInstance(addresses.btcusd);\n      const btcDec = await btcInst.decimals();\n      const btcPrice = (await btcInst.getLatestPrice()) / Math.pow(10, btcDec);\n      // BTC\n      const ethInst = ConsumerInstance(addresses.ethusd);\n      const ethDec = await ethInst.decimals();\n      const ethPrice = (await ethInst.getLatestPrice()) / Math.pow(10, ethDec);\n\n      this.setState(() => {\n         return {\n            btcusd: btcPrice.toFixed(2),\n            ethusd: ethPrice.toFixed(2),\n            updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`,\n         };\n      });\n   };\n\n   render() {\n      return (\n         <div>\n            <h3>Data Price Feed</h3>\n            <table className='ui celled table'>\n               <thead>\n                  <tr>\n                     <th>Token Pair</th>\n                     <th>Price</th>\n                     <th>\n                        <a>\n                           <Button\n                              content='Updated Data'\n                              icon='plus square'\n                              primary\n                              onClick={this.onUpdate}\n                           />\n                        </a>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  <tr>\n                     <td data-label='Token Pair'>BTC/USD</td>\n                     <td data-label='Price'>{this.state.btcusd}</td>\n                     <td data-label='Last Updated'>{this.state.updated}</td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}