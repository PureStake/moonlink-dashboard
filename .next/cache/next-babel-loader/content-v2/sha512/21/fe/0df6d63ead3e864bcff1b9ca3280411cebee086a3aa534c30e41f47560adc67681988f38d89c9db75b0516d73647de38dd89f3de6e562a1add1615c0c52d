{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\n\nconst addresses = require('../ethereum/addresses');\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      btcusd: 'N/A',\n      ethusd: ethPrice.toFixed(2),\n      dotusd: btcPrice.toFixed(2),\n      ksmusd: ethPrice.toFixed(2),\n      aaveusd: btcPrice.toFixed(2),\n      algousd: ethPrice.toFixed(2),\n      bandusd: btcPrice.toFixed(2),\n      linkusd: ethPrice.toFixed(2),\n      sushiusd: btcPrice.toFixed(2),\n      uniusd: ethPrice.toFixed(2)\n    });\n\n    _defineProperty(this, \"onUpdate\", async () => {\n      // Date\n      const currentdate = new Date(); // BTC\n\n      const btcPrice = await this.getPrice(addresses.btcusd); // ETH\n\n      const ethPrice = await this.getPrice(addresses.ethusd); // DOT\n\n      const dotPrice = await this.getPrice(addresses.dotusd); // KSM\n\n      const ksmPrice = await this.getPrice(addresses.ksmusd); // AAVE\n\n      const aavePrice = await this.getPrice(addresses.aaveusd); // ALGO\n\n      const algoPrice = await this.getPrice(addresses.algousd); // BAND\n\n      const bandPrice = await this.getPrice(addresses.bandusd); // LINK\n\n      const linkPrice = await this.getPrice(addresses.linkusd); // SUSHI\n\n      const sushiPrice = await this.getPrice(addresses.sushiusd); // UNI\n\n      const uniPrice = await this.getPrice(addresses.uniusd);\n      this.setState(() => {\n        return {\n          btcusd: btcPrice.toFixed(2),\n          ethusd: ethPrice.toFixed(2),\n          dotusd: btcPrice.toFixed(2),\n          ksmusd: ethPrice.toFixed(2),\n          aaveusd: btcPrice.toFixed(2),\n          algousd: ethPrice.toFixed(2),\n          bandusd: btcPrice.toFixed(2),\n          linkusd: ethPrice.toFixed(2),\n          sushiusd: btcPrice.toFixed(2),\n          uniusd: ethPrice.toFixed(2),\n          updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`\n        };\n      });\n    });\n\n    _defineProperty(this, \"getPrice\", async address => {\n      const contractInstance = ConsumerInstance(address);\n      const dec = await contractInstance.decimals();\n      return (await contractInstance.getLatestPrice()) / Math.pow(10, dec);\n    });\n  }\n\n  // Nextjs uses this function to render this first server-side\n  static async getInitialProps() {\n    return {};\n  }\n\n  async componentDidMount() {\n    const currentdate = new Date();\n    const btcInst = ConsumerInstance(addresses.btcusd);\n    const decimals = await btcInst.decimals();\n    const price = (await btcInst.getLatestPrice()) / Math.pow(10, decimals);\n    this.setState(() => {\n      return {\n        btcusd: price.toFixed(2),\n        updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Price Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ui celled table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Pair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  content: \"Updated Data\",\n                  icon: \"plus square\",\n                  primary: true,\n                  onClick: this.onUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Token Pair\",\n              children: \"BTC/USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Price\",\n              children: this.state.btcusd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Last Updated\",\n              children: this.state.updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Token Pair\",\n              children: \"ETH/USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Price\",\n              children: this.state.ethusd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Last Updated\",\n              children: this.state.updated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/alberto/data/presentations/ChainlinkHackathon/moonlink-oracles/components/DataFeed.js"],"names":["React","Component","Button","ConsumerInstance","addresses","require","Table","btcusd","ethusd","ethPrice","toFixed","dotusd","btcPrice","ksmusd","aaveusd","algousd","bandusd","linkusd","sushiusd","uniusd","currentdate","Date","getPrice","dotPrice","ksmPrice","aavePrice","algoPrice","bandPrice","linkPrice","sushiPrice","uniPrice","setState","updated","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","address","contractInstance","dec","decimals","getLatestPrice","Math","pow","getInitialProps","componentDidMount","btcInst","price","render","onUpdate","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ConsumerInstance from '../ethereum/feed';\nconst addresses = require('../ethereum/addresses');\n\nclass Table extends Component {\n   // Nextjs uses this function to render this first server-side\n   static async getInitialProps() {\n      return {};\n   }\n\n   state = {\n      btcusd: 'N/A',\n      ethusd: ethPrice.toFixed(2),\n      dotusd: btcPrice.toFixed(2),\n      ksmusd: ethPrice.toFixed(2),\n      aaveusd: btcPrice.toFixed(2),\n      algousd: ethPrice.toFixed(2),\n      bandusd: btcPrice.toFixed(2),\n      linkusd: ethPrice.toFixed(2),\n      sushiusd: btcPrice.toFixed(2),\n      uniusd: ethPrice.toFixed(2),\n   };\n\n   async componentDidMount() {\n      const currentdate = new Date();\n\n      const btcInst = ConsumerInstance(addresses.btcusd);\n      const decimals = await btcInst.decimals();\n      const price = (await btcInst.getLatestPrice()) / Math.pow(10, decimals);\n\n      this.setState(() => {\n         return {\n            btcusd: price.toFixed(2),\n            updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`,\n         };\n      });\n   }\n\n   onUpdate = async () => {\n      // Date\n      const currentdate = new Date();\n      // BTC\n      const btcPrice = await this.getPrice(addresses.btcusd);\n      // ETH\n      const ethPrice = await this.getPrice(addresses.ethusd);\n      // DOT\n      const dotPrice = await this.getPrice(addresses.dotusd);\n      // KSM\n      const ksmPrice = await this.getPrice(addresses.ksmusd);\n      // AAVE\n      const aavePrice = await this.getPrice(addresses.aaveusd);\n      // ALGO\n      const algoPrice = await this.getPrice(addresses.algousd);\n      // BAND\n      const bandPrice = await this.getPrice(addresses.bandusd);\n      // LINK\n      const linkPrice = await this.getPrice(addresses.linkusd);\n      // SUSHI\n      const sushiPrice = await this.getPrice(addresses.sushiusd);\n      // UNI\n      const uniPrice = await this.getPrice(addresses.uniusd);\n\n      this.setState(() => {\n         return {\n            btcusd: btcPrice.toFixed(2),\n            ethusd: ethPrice.toFixed(2),\n            dotusd: btcPrice.toFixed(2),\n            ksmusd: ethPrice.toFixed(2),\n            aaveusd: btcPrice.toFixed(2),\n            algousd: ethPrice.toFixed(2),\n            bandusd: btcPrice.toFixed(2),\n            linkusd: ethPrice.toFixed(2),\n            sushiusd: btcPrice.toFixed(2),\n            uniusd: ethPrice.toFixed(2),\n            updated: `${currentdate.getFullYear()}/${currentdate.getMonth()}/${currentdate.getDate()} ${currentdate.getHours()}:${currentdate.getMinutes()}:${currentdate.getSeconds()}`,\n         };\n      });\n   };\n\n   getPrice = async (address) => {\n      const contractInstance = ConsumerInstance(address);\n      const dec = await contractInstance.decimals();\n      return (await contractInstance.getLatestPrice()) / Math.pow(10, dec);\n   };\n\n   render() {\n      return (\n         <div>\n            <h3>Data Price Feed</h3>\n            <table className='ui celled table'>\n               <thead>\n                  <tr>\n                     <th>Token Pair</th>\n                     <th>Price</th>\n                     <th>\n                        <a>\n                           <Button\n                              content='Updated Data'\n                              icon='plus square'\n                              primary\n                              onClick={this.onUpdate}\n                           />\n                        </a>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  <tr>\n                     <td data-label='Token Pair'>BTC/USD</td>\n                     <td data-label='Price'>{this.state.btcusd}</td>\n                     <td data-label='Last Updated'>{this.state.updated}</td>\n                  </tr>\n               </tbody>\n               <tbody>\n                  <tr>\n                     <td data-label='Token Pair'>ETH/USD</td>\n                     <td data-label='Price'>{this.state.ethusd}</td>\n                     <td data-label='Last Updated'>{this.state.updated}</td>\n                  </tr>\n               </tbody>\n            </table>\n         </div>\n      );\n   }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}